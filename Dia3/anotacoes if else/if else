Em Java, as instruções `if` e `else` são usadas para tomar decisões com base em condições. Elas permitem executar diferentes blocos de código dependendo do resultado de uma expressão booleana. Aqui está uma explicação de como usá-las:

### Estrutura Básica do `if`

A instrução `if` verifica uma condição e, se essa condição for `true`, o bloco de código associado é executado.

```java
if (condição) {
    // Código a ser executado se a condição for verdadeira
}
```

### Estrutura Básica do `if-else`

A instrução `else` é usada junto com `if` para especificar um bloco de código que deve ser executado se a condição no `if` for `false`.

```java
if (condição) {
    // Código a ser executado se a condição for verdadeira
} else {
    // Código a ser executado se a condição for falsa
}
```

### Estrutura `if-else if-else`

Para testar múltiplas condições, você pode usar `else if` entre `if` e `else`.

```java
if (condição1) {
    // Código a ser executado se a condição1 for verdadeira
} else if (condição2) {
    // Código a ser executado se a condição1 for falsa e condição2 for verdadeira
} else {
    // Código a ser executado se todas as condições anteriores forem falsas
}
```

### Exemplo Completo

Aqui está um exemplo que demonstra o uso de `if`, `else if` e `else`:

```java
public class Main {
    public static void main(String[] args) {
        int numero = 10;

        if (numero > 0) {
            System.out.println("O número é positivo.");
        } else if (numero < 0) {
            System.out.println("O número é negativo.");
        } else {
            System.out.println("O número é zero.");
        }
    }
}
```

Neste exemplo, a variável `numero` é comparada com 0. Dependendo do valor de `numero`, uma mensagem correspondente é impressa na saída.

### Notas Importantes
1. **Parênteses**: As condições dentro do `if` e `else if` devem estar entre parênteses.
2. **Bloco de Código**: Se houver mais de uma instrução a ser executada em um bloco, ele deve ser delimitado por chaves `{}`. Se houver apenas uma instrução, as chaves são opcionais, mas seu uso é considerado uma boa prática para melhorar a legibilidade do código.
3. **Execução de Blocos**: Apenas um dos blocos `if`, `else if` ou `else` será executado, o primeiro cuja condição seja avaliada como `true`.